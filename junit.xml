<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="25" failures="4" errors="0" time="4.882">
  <testsuite name="diff" errors="0" failures="1" skipped="0" timestamp="2025-02-17T17:40:49" time="1.884" tests="5">
    <testcase classname="diff should return the difference between two numbers" name="diff should return the difference between two numbers" time="0.002">
    </testcase>
    <testcase classname="diff should handle negative numbers" name="diff should handle negative numbers" time="0">
    </testcase>
    <testcase classname="diff should handle zero" name="diff should handle zero" time="0">
    </testcase>
    <testcase classname="diff functionality should generate and store diffs" name="diff functionality should generate and store diffs" time="0.755">
      <failure>Error: expect(received).toContain(expected) // indexOf

Expected substring: &quot;&lt;diff count=\&quot;1\&quot;&gt;&quot;
Received string:    &quot;&lt;diff attempt=\&quot;1\&quot;&gt;diff --git a/test.txt b/test.txt
index cbc4e2e..268af4e 100644
--- a/test.txt
+++ b/test.txt
@@ -1 +1 @@
-initial content
\\ No newline at end of file
+modified content
\\ No newline at end of file
&lt;/diff&gt;
&quot;
    at Object.toContain (C:\dev\apptoapp\src\test\files.test.js:79:17)</failure>
    </testcase>
    <testcase classname="diff functionality should clear diff buffer" name="diff functionality should clear diff buffer" time="0.717">
    </testcase>
  </testsuite>
  <testsuite name="LLM Providers" errors="0" failures="3" skipped="0" timestamp="2025-02-17T17:40:51" time="0.958" tests="4">
    <testcase classname="LLM Providers MistralProvider should make request with correct parameters" name="LLM Providers MistralProvider should make request with correct parameters" time="0.478">
      <failure>Error: API Error 401: Unauthorized
    at C:\dev\apptoapp\src\llm\providers.js:67:17
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at retryWithBackoff (C:\dev\apptoapp\src\llm\providers.js:9:14)
    at Object.&lt;anonymous&gt; (C:\dev\apptoapp\src\test\providers.test.js:35:24)</failure>
    </testcase>
    <testcase classname="LLM Providers MistralProvider should handle API errors" name="LLM Providers MistralProvider should handle API errors" time="0.398">
      <failure>Error: expect(received).rejects.toThrow(expected)

Expected substring: &quot;Mistral API error: Unauthorized&quot;
Received message:   &quot;API Error 401: Unauthorized&quot;

      65 |             bodyPreview: responseText.slice(0, 200)
      66 |           });
    &gt; 67 |           throw new Error(`API Error ${response.status}: ${response.statusText}`);
         |                 ^
      68 |         }
      69 |
      70 |         const data = await response.json();

      at src/llm/providers.js:67:17
      at retryWithBackoff (src/llm/providers.js:9:14)
      at Object.&lt;anonymous&gt; (src/test/providers.test.js:62:7)
    at Object.toThrow (C:\dev\apptoapp\node_modules\expect\build\index.js:218:22)
    at Object.toThrow (C:\dev\apptoapp\src\test\providers.test.js:62:58)
    at Promise.then.completed (C:\dev\apptoapp\node_modules\jest-circus\build\utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (C:\dev\apptoapp\node_modules\jest-circus\build\utils.js:231:10)
    at _callCircusTest (C:\dev\apptoapp\node_modules\jest-circus\build\run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (C:\dev\apptoapp\node_modules\jest-circus\build\run.js:252:3)
    at _runTestsForDescribeBlock (C:\dev\apptoapp\node_modules\jest-circus\build\run.js:126:9)
    at _runTestsForDescribeBlock (C:\dev\apptoapp\node_modules\jest-circus\build\run.js:121:9)
    at _runTestsForDescribeBlock (C:\dev\apptoapp\node_modules\jest-circus\build\run.js:121:9)
    at run (C:\dev\apptoapp\node_modules\jest-circus\build\run.js:71:3)
    at runAndTransformResultsToJestFormat (C:\dev\apptoapp\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:122:21)
    at jestAdapter (C:\dev\apptoapp\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:79:19)
    at runTestInternal (C:\dev\apptoapp\node_modules\jest-runner\build\runTest.js:367:16)
    at runTest (C:\dev\apptoapp\node_modules\jest-runner\build\runTest.js:444:34)</failure>
    </testcase>
    <testcase classname="LLM Providers createLLMProvider should create MistralProvider" name="LLM Providers createLLMProvider should create MistralProvider" time="0">
    </testcase>
    <testcase classname="LLM Providers createLLMProvider should throw error for unsupported provider" name="LLM Providers createLLMProvider should throw error for unsupported provider" time="0.001">
      <failure>Error: expect(received).toThrow(expected)

Expected substring: &quot;Unsupported LLM provider&quot;

Received function did not throw
    at Object.toThrow (C:\dev\apptoapp\src\test\providers.test.js:73:66)
    at Promise.then.completed (C:\dev\apptoapp\node_modules\jest-circus\build\utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (C:\dev\apptoapp\node_modules\jest-circus\build\utils.js:231:10)
    at _callCircusTest (C:\dev\apptoapp\node_modules\jest-circus\build\run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (C:\dev\apptoapp\node_modules\jest-circus\build\run.js:252:3)
    at _runTestsForDescribeBlock (C:\dev\apptoapp\node_modules\jest-circus\build\run.js:126:9)
    at _runTestsForDescribeBlock (C:\dev\apptoapp\node_modules\jest-circus\build\run.js:121:9)
    at _runTestsForDescribeBlock (C:\dev\apptoapp\node_modules\jest-circus\build\run.js:121:9)
    at run (C:\dev\apptoapp\node_modules\jest-circus\build\run.js:71:3)
    at runAndTransformResultsToJestFormat (C:\dev\apptoapp\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:122:21)
    at jestAdapter (C:\dev\apptoapp\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:79:19)
    at runTestInternal (C:\dev\apptoapp\node_modules\jest-runner\build\runTest.js:367:16)
    at runTest (C:\dev\apptoapp\node_modules\jest-runner\build\runTest.js:444:34)</failure>
    </testcase>
  </testsuite>
  <testsuite name="main" errors="0" failures="0" skipped="0" timestamp="2025-02-17T17:40:52" time="1.644" tests="2">
    <testcase classname="main should handle test instruction" name="main should handle test instruction" time="0.926">
    </testcase>
    <testcase classname="main should collect diffs after each attempt" name="main should collect diffs after each attempt" time="0.613">
    </testcase>
  </testsuite>
  <testsuite name="tools" errors="0" failures="0" skipped="0" timestamp="2025-02-17T17:40:54" time="0.097" tests="2">
    <testcase classname="tools should execute a command and return the output" name="tools should execute a command and return the output" time="0.017">
    </testcase>
    <testcase classname="tools should handle errors when executing a command" name="tools should handle errors when executing a command" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="utils" errors="0" failures="0" skipped="0" timestamp="2025-02-17T17:40:54" time="0.08" tests="4">
    <testcase classname="utils should return the sum of two numbers" name="utils should return the sum of two numbers" time="0.001">
    </testcase>
    <testcase classname="utils should return the product of two numbers" name="utils should return the product of two numbers" time="0.001">
    </testcase>
    <testcase classname="makeApiRequest should use Mistral exclusively" name="makeApiRequest should use Mistral exclusively" time="0.01">
    </testcase>
    <testcase classname="makeApiRequest should handle API errors" name="makeApiRequest should handle API errors" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Logger" errors="0" failures="0" skipped="0" timestamp="2025-02-17T17:40:54" time="0.063" tests="8">
    <testcase classname="Logger should truncate long strings" name="Logger should truncate long strings" time="0.006">
    </testcase>
    <testcase classname="Logger should not truncate short strings" name="Logger should not truncate short strings" time="0.001">
    </testcase>
    <testcase classname="Logger should handle non-string inputs" name="Logger should handle non-string inputs" time="0.001">
    </testcase>
    <testcase classname="Logger should handle undefined input" name="Logger should handle undefined input" time="0">
    </testcase>
    <testcase classname="Logger should handle null input" name="Logger should handle null input" time="0">
    </testcase>
    <testcase classname="Logger should handle circular references" name="Logger should handle circular references" time="0.001">
    </testcase>
    <testcase classname="Logger should format values correctly" name="Logger should format values correctly" time="0.001">
    </testcase>
    <testcase classname="Logger logging functions should not throw" name="Logger logging functions should not throw" time="0.001">
    </testcase>
  </testsuite>
</testsuites>